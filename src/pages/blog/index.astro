---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import SearchBox from "../../components/SearchBox.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";
import DefaultImage from "../../assets/blog-placeholder-1.jpg";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Obtener todos los códigos únicos para los filtros
const allCodes = [...new Set(posts.map(post => post.data.code).filter(Boolean))].sort();
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
			
			/* Estilos para filtros */
			.filters {
				margin-bottom: 2rem;
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
				align-items: center;
			}
			
			.filter-btn {
				padding: 0.5rem 1rem;
				border: 2px solid rgb(var(--accent));
				background: transparent;
				color: rgb(var(--accent));
				border-radius: 20px;
				cursor: pointer;
				transition: all 0.2s ease;
				font-size: 0.9rem;
				font-weight: 500;
			}
			
			.filter-btn:hover,
			.filter-btn.active {
				background: rgb(var(--accent));
				color: white;
			}
			
			.post-item {
				transition: opacity 0.3s ease;
			}
			
			.post-item.hidden {
				display: none;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<!-- Componente de búsqueda -->
				<SearchBox />
				
				<div class="filters">
					<span style="font-weight: bold; margin-right: 1rem;">Filtrar por:</span>
					<button class="filter-btn active" data-filter="all">Todos</button>
					{allCodes.map(code => (
						<button class="filter-btn" data-filter={code}>
							{code ? code.charAt(0).toUpperCase() + code.slice(1) : 'Sin código'}
						</button>
					))}
				</div>
				
				<ul>
					{
						posts.map((post) => (
							<li class="post-item" data-code={post.data.code || 'sin-codigo'}>
								<a href={`/blog/${post.id}/`}>
									<Image 
										width={720} 
										height={360} 
										src={post.data.heroImage && typeof post.data.heroImage === 'object' ? post.data.heroImage : DefaultImage} 
										alt={post.data.title} 
									/>
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
		
		<script>
			// Funcionalidad de filtrado
			document.addEventListener('DOMContentLoaded', function() {
				const filterButtons = document.querySelectorAll('.filter-btn');
				const postItems = document.querySelectorAll('.post-item');
				
				filterButtons.forEach(button => {
					button.addEventListener('click', function(this: HTMLButtonElement) {
						const filter = this.getAttribute('data-filter');
						
						// Actualizar botones activos
						filterButtons.forEach(btn => btn.classList.remove('active'));
						this.classList.add('active');
						
						// Filtrar posts
						postItems.forEach(item => {
							const postCode = item.getAttribute('data-code');
							
							if (filter === 'all' || postCode === filter) {
								item.classList.remove('hidden');
							} else {
								item.classList.add('hidden');
							}
						});
					});
				});
			});
		</script>
	</body>
</html>
